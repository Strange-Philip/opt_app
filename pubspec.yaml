name: opt_app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  firebase_core: ^2.27.0
  firebase_remote_config: ^4.3.17
  firebase_crashlytics: ^3.4.18
  flutter_dotenv: ^5.1.0
  flutter_svg: ^2.0.10+1
  flutter_gemini: ^2.0.4
  lottie: ^3.1.2
  intl: ^0.19.0
  image_picker: ^1.0.7

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
    # - assets/images
    - assets/icons/
    - assets/animations/
    - .env
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Satoshi
      fonts:
        - asset: fonts/Satoshi-Regular.otf
        - asset: fonts/Satoshi-Medium.otf
          weight: 500
        - asset: fonts/Satoshi-Bold.otf
          weight: 700
        - asset: fonts/Satoshi-Light.otf
          weight: 300
        - asset: fonts/Satoshi-Black.otf
          weight: 900
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages


# Generated by Spider
# For more info on configuration, visit https://birjuvachhani.github.io/spider/grouping/
spider:
  # Generates unit tests to verify that the assets exists in assets directory
  generate_tests: true
  # Use this to remove vcs noise created by the `generated` comments in dart code
  no_comments: true
  # Exports all the generated file as the one library
  export: true
  fonts: true
  # This allows you to import all the generated references with 1 single import!
  use_part_of: true
  # Generates a variable that contains a list of all asset values.
  use_references_list: false
  # Generates files with given ignore rules for file.
  # ignored_rules:
  #   - public_member_api_docs
  # Generates dart font family references for fonts specified in pubspec.yaml
  # fonts: true
  # -------- OR --------
  # fonts:
  #   class_name: MyFonts
  #   file_name: my_fonts
  # Location where all the generated references will be stored
  package: resources
  groups:
    - path: assets/icons
      class_name: AppIcons
      types: [ .png, .jpg, .jpeg, .webp, .webm, .bmp, .svg] 
    - path: assets/animations
      class_name: AppLottie
      types: [ .png, .jpg, .jpeg, .webp, .webm, .json, .svg, .gif] 